apiVersion: v1
kind: Template
metadata:
  name: raincatcher
  annotations:
    openshift.io/display-name: Raincatcher
    description: Raincatcher
    iconClass: icon-nodejs
    tags: instant-app,raincatcher,mobile-service
labels:
  template: raincatcher
parameters:
  - name: MONGODB_ADMIN_PASSWORD
    description: Password for the MongoDB admin user. This value will be generated if not specified.
    generate: expression
    from: "[a-zA-Z0-9]{40}"
  - name: MONGODB_USER_NAME
    description: Username for the created MongoDB user.
    value: "raincatcher-user"
  - name: MONGODB_USER_PASSWORD
    description: Password for the created MongoDB user. This value will be generated if not specified.
    generate: expression
    from: "[a-zA-Z0-9]{40}"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: raincatcher
    labels:
      app: raincatcher
      template: raincatcher
  spec:
    ports:
    - name: raincatcher
      port: 8001
      protocol: TCP
      targetPort: 8001
    selector:
      run: raincatcher
    sessionAffinity: None
    type: ClusterIP

- apiVersion: "v1"
  kind: BuildConfig
  metadata:
    labels:
      app: raincatcher
      template: raincatcher
    name: raincatcher
  spec:
    triggers: 
    - type: "GitHub"
    - type: "ImageChange"
    source: 
      type: "Git"
      git:
        uri: "https://github.com/feedhenry-raincatcher/raincatcher-server.git"
        ref: "master"
      contextDir: "app/dir"

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: raincatcher-server
      name: raincatcher-server
    name: raincatcher-server
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: raincatcher-server
      name: raincatcher-server
    name: raincatcher-server
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: raincatcher-server:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: https://github.com/feedhenry-raincatcher/raincatcher-server.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:6
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: dMRcuYXdb4j9OapPXR-l
      type: GitHub
    - generic:
        secret: nm26q1wD3XF-ACXYaLtc
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: raincatcher-server
      name: raincatcher-server
    name: raincatcher-server
  spec:
    replicas: 1
    selector:
      app: raincatcher-server
      deploymentconfig: raincatcher-server
      name: raincatcher-server
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: raincatcher-server
          deploymentconfig: raincatcher-server
          name: raincatcher-server
      spec:
        containers:
        - image: raincatcher-server:latest
          name: raincatcher-server
          ports:
          - containerPort: 8001
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - raincatcher-server
        from:
          kind: ImageStreamTag
          name: raincatcher-server:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: raincatcher-server
      name: raincatcher-server
    name: raincatcher-server
  spec:
    ports:
    - name: 8001-tcp
      port: 8001
      protocol: TCP
      targetPort: 8001
    selector:
      app: raincatcher-server
      deploymentconfig: raincatcher-server
      name: raincatcher-server
  status:
    loadBalancer: {}
kind: List
metadata: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-name: "raincatcher"
      template.openshift.io/expose-type: "raincatcher"
    labels:
      app: raincatcher
      template: raincatcher
    name: mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: redis
    labels:
      app: raincatcher
      template: raincatcher
  spec:
    ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      run: redis
    sessionAffinity: None
    type: ClusterIP

- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: raincatcher
      template: raincatcher
    name: mongodb
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          name: mongodb
      spec:
        containers:
        - name: mongodb
          env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: mongodb
          - name: MONGODB_DATABASE
            value: sync
          image: centos/mongodb-32-centos7@sha256:aa37993c3be2d4731db79c0c7aba11db3e9352b1adc586c7e9054f57808789c0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange

- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: raincatcher
      template: raincatcher
      run: redis
    name: redis
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: redis
    strategy:
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: redis
      spec:
        containers:
        - name: redis
          image: rhmap/redis:2.18.22
          imagePullPolicy: Always
          ports:
          - containerPort: 6379
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: "https://{.spec.host}{.spec.path}"
    name: raincatcher
    labels:
      app: raincatcher
      template: raincatcher
  spec:
    port:
      targetPort: raincatcher
    tls:
      termination: edge
    to:
      kind: Service
      name: raincatcher
    wildcardPolicy: None

- apiVersion: v1
  kind: Secret
  stringData:
    database-admin-password: ${MONGODB_ADMIN_PASSWORD}
    database-password: ${MONGODB_USER_PASSWORD}
    database-user: ${MONGODB_USER_NAME}
  metadata:
    labels:
      app: raincatcher
      template: raincatcher
    name: mongodb
  type: Opaque
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mongodb
    labels:
      app: raincatcher
      template: raincatcher
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi